<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://appchemist.github.io/</id><title>Appchemist</title><subtitle>Somethings relate to Develop</subtitle> <updated>2023-12-20T11:43:51+09:00</updated> <author> <name>appchemist</name> <uri>https://appchemist.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://appchemist.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://appchemist.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 appchemist </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Kafka - 인덱스</title><link href="https://appchemist.github.io/posts/Kafka_Index/" rel="alternate" type="text/html" title="Kafka - 인덱스" /><published>2023-12-19T00:00:00+09:00</published> <updated>2023-12-19T00:00:00+09:00</updated> <id>https://appchemist.github.io/posts/Kafka_Index/</id> <content src="https://appchemist.github.io/posts/Kafka_Index/" /> <author> <name>appchemist</name> </author> <category term="Study" /> <summary> 여기서 이야기하고자 하는 인덱스란, 카프카의 OffsetIndex, TimeIndex이다. 해당 인덱스들은 모두 파일로 관리되는데, 카프카의 로그 파일(baseoffset.log) 마다 한 벌씩 생성된다. 각각의 파일은 baseoffset.index, baseoffset.timeindex이다. 위의 baseoffset은 10자리의 숫자로 구성되며, 각 로그 파일의 시작 레코드 offset이다. 카프카의 로그 파일이 커지면 특정 레코드를 찾기 위해 로그 파일 전체를 뒤져야 하는데, 이는 효율이 떨어진다. 한 로그 파일 안에서 특정 레코드를 효율적으로 찾기 위해서 사용하는 방법이 인덱스다. 각 인덱스의 용도는 다음과 같다. OffsetIndex는 레코드의 Offset으로 로그 파일의 Positi... </summary> </entry> <entry><title>DDIA - 파티셔닝</title><link href="https://appchemist.github.io/posts/DDIA-CH6/" rel="alternate" type="text/html" title="DDIA - 파티셔닝" /><published>2022-06-10T00:00:00+09:00</published> <updated>2022-06-13T19:48:19+09:00</updated> <id>https://appchemist.github.io/posts/DDIA-CH6/</id> <content src="https://appchemist.github.io/posts/DDIA-CH6/" /> <author> <name>appchemist</name> </author> <category term="Study" /> <category term="Book" /> <summary> Table of Contents 파티셔닝과 복제 Key-Value 데이터 파티셔닝 키 범위 기준 파티셔닝 키의 해시값 기준 파티셔닝 참고 쏠린 작업부하와 핫스팟 완화 파티셔닝과 보조 색인 문서 기준 보조 색인 파티셔닝 용어 기준 보조 색인 파티셔닝 파티션 재균형화 재균형화 전략 쓰면 안 되는 방법: hash mod N 파티션 개수 고정 동적 파티셔닝 노드 비례 파티셔닝 운영: 자동... </summary> </entry> <entry><title>DDIA - 복제_다중 리더와 리더 없음</title><link href="https://appchemist.github.io/posts/DDIA-CH5-2/" rel="alternate" type="text/html" title="DDIA - 복제_다중 리더와 리더 없음" /><published>2022-06-03T00:00:00+09:00</published> <updated>2022-06-03T00:00:00+09:00</updated> <id>https://appchemist.github.io/posts/DDIA-CH5-2/</id> <content src="https://appchemist.github.io/posts/DDIA-CH5-2/" /> <author> <name>appchemist</name> </author> <category term="Study" /> <category term="Book" /> <summary> Table of Contents 다중 리더 복제 다중 리더 복제의 사용 사례 다중 데이터센터 운영 오프라인 작업을 하는 클라이언트 쓰기 충돌 다루기 동기 대 비동기 충돌 감지 충돌 회피 일관된 상태 수렴 사용자 정의 충돌 해소 로직 자동 충돌 해소 다중 리더 복제 토폴리지 리더 없는 복제 노드가 다운됐을 때 데이터베이스에 쓰기 읽기 복구와 안티 엔트로피 읽... </summary> </entry> <entry><title>DDIA - 복제_단일 리더</title><link href="https://appchemist.github.io/posts/DDIA-CH5-1/" rel="alternate" type="text/html" title="DDIA - 복제_단일 리더" /><published>2022-05-27T00:00:00+09:00</published> <updated>2022-05-27T00:00:00+09:00</updated> <id>https://appchemist.github.io/posts/DDIA-CH5-1/</id> <content src="https://appchemist.github.io/posts/DDIA-CH5-1/" /> <author> <name>appchemist</name> </author> <category term="Study" /> <category term="Book" /> <summary> Table of Contents 리더와 팔로워 동기식 대 비동기식 복제 새로운 팔로워 설정 노드 중단 처리 팔로워 장애: 따라잡기 복구 리더 장애: 장애 복구 리더 기반 복제 로그 구현 구문 기반 복제 Write-ahead log(WAL) 기반 복제 논리적(로우 기반) 로그 복제 트리거 기반 복제 복제 지연 문제 자신이 쓴 내용 읽기 단조 읽기 일관된 순서로 읽기 복제 지연을 위한 ... </summary> </entry> <entry><title>DDIA - 부호화와_발전</title><link href="https://appchemist.github.io/posts/DDIA-CH4/" rel="alternate" type="text/html" title="DDIA - 부호화와_발전" /><published>2022-05-20T00:00:00+09:00</published> <updated>2022-05-20T20:46:44+09:00</updated> <id>https://appchemist.github.io/posts/DDIA-CH4/</id> <content src="https://appchemist.github.io/posts/DDIA-CH4/" /> <author> <name>appchemist</name> </author> <category term="Study" /> <category term="Book" /> <summary> Table of Contents 데이터 부호화 형식 언어별 형식 JSON과 XML 그리고 이진 변경 이진 부호화 스리프트와 프로토콜 버퍼 스리프트 프로토콜 버퍼 필드 태그와 스키마 발전 데이터타입과 스키마 발전 아브로 쓰기 스키마와 읽기 스키마 스키마 발전 규칙 쓰기 스키마란? 동적 생성 스키마 코드 생성과 동적 타입 언어 스키마의 장점 ... </summary> </entry> </feed>
